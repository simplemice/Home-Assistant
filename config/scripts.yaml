take_snapshot_of_states_before_away:
  alias: Alarm - Take snapshot of states before away
  sequence:
  - service: scene.create
    data:
      scene_id: go_away_states
      snapshot_entities:
      - fan.dmaker_p23_42a8_fan
      - fan.dmaker_p28_19b6_fan
      - fan.zhimi_fa1_4020_fan
      - fan.kitchen_power_strip_switch
      - climate.bedroom_aircon
      - light.lightstrip
      - light.kitchen_wall_switch_left
      - light.kitchen_wall_switch_right
      - light.kitchen_wall_switch_center
      - light.lumi_gateway_v3_light
      - light.tv_table_ambient
      - light.kitchen_ambient
      - light.livingroom_night_ambient
      - light.wled_matrix
      - light.awtrix_44dff8_matrix
      - switch.raspberry_outlet
      - switch.kitchen_kettle
      - input_boolean.livingroom_curtains
      - media_player.spotify_simplemice
      - select.wled_matrix_preset
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  mode: single
  icon: mdi:state-machine
spotify_start_playback:
  alias: Spotify Start Playback
  sequence:
  - service: spotcast.start
    data:
      device_name: '{{ states(''input_select.speakers'') }}'
      force_playback: true
      start_volume: 30
      shuffle: true
  mode: single
  icon: mdi:spotify
activate_alexa_actionable_notification:
  alias: activate_alexa_actionable_notification
  description: Activates an actionable notification on a specific echo device
  fields:
    text:
      description: The text you would like alexa to speak.
      example: What would you like the thermostat set to?
    event_id:
      description: Correlation ID for event responses
      example: ask_for_temperature
    alexa_device:
      description: Alexa device you want to trigger
      example: media_player.bedroom_speaker
    suppress_confirmation:
      description: Set true if you want to suppress 'okay' confirmation
      example: 'true'
  sequence:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.alexa_actionable_notification
      value: '{"text": "{{ text }}", "event": "{{ event_id }}", "suppress_confirmation":
        "{{ suppress_confirmation }}"}'
  - service: media_player.play_media
    data_template:
      entity_id: '{{ alexa_device }}'
      media_content_type: skill
      media_content_id: amzn1.ask.skill.3302d350-d683-4e80-bbc6-1446201c1d24
  mode: single
notification_door_bell:
  alias: Notification - Police Effect on Wled Panel
  sequence:
  - service: scene.create
    metadata: {}
    data:
      snapshot_entities:
      - light.wled_matrix
      scene_id: before_alarm
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: select.select_option
    metadata: {}
    data:
      option: Police
    target:
      entity_id: select.wled_matrix_preset
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: select.select_option
    metadata: {}
    data:
      option: Black Hole
    target:
      entity_id: select.wled_matrix_preset
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: scene.turn_on
    metadata: {}
    target:
      entity_id: scene.before_alarm
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: scene.reload
    metadata: {}
    data: {}
  mode: single
  icon: mdi:police-badge-outline
send_notification_to_mobile:
  alias: send_notification_to_mobile
  sequence:
  - service: notify.mobile_app_micemob
    data:
      message: '{{message}}'
      title: '{{title}}'
  mode: single
  icon: mdi:bell-alert
  fields:
    title:
      selector:
        text:
      name: title
      description: Enter a title for notify
      required: true
    message:
      selector:
        text:
      name: message
      description: Enter a message for notify
      required: true
safe_security_automation:
  alias: Safe Security Automation
  sequence:
  - if:
    - condition: state
      entity_id: alarm_control_panel.safe
      state: armed_home
    then:
    - service: alarm_control_panel.alarm_disarm
      data:
        code: '5412'
      target:
        entity_id: alarm_control_panel.safe
    - service: notify.alexa_media_bedroom_speaker
      data:
        message: Safe Alarm Disarmed!
    - service: notify.alexa_media_bedroom_speaker
      data:
        message: <audio src="soundbank://soundlibrary/alarms/car_alarms/car_alarm_05"/>
        data:
          type: tts
    else:
    - service: alarm_control_panel.alarm_arm_home
      data: {}
      target:
        entity_id: alarm_control_panel.safe
    - service: notify.alexa_media_bedroom_speaker
      data:
        message: Safe Alarm Armed!
    - service: notify.alexa_media_bedroom_speaker
      data:
        message: <audio src="soundbank://soundlibrary/alarms/car_alarms/car_alarm_05"/>
        data:
          type: tts
  mode: single
  icon: mdi:safe
