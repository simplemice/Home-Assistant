###############################################################################
#   @author         :   Simplemice
#   @date           :   27/01/2024
#   @package        :   Sysmon
#   @description    :   A collection of Home Assistant and Pi Sensors
###############################################################################
panel_iframe:
  zigbee2mqtt:
    title: "Zigbee2MQTT"
    url: "http://192.168.3.5:8098"
    icon: mdi:zigbee
    require_admin: true
  nodered:
    title: "Node Red"
    url: "http://192.168.3.8:1880"
    icon: mdi:nodejs
    require_admin: true
  esphome:
    title: "ESPHome"
    url: "http://192.168.3.7:6052"
    icon: mdi:chip
    require_admin: true
  frigate:
    title: "Frigate"
    url: "http://192.168.3.9:5000/"
    icon: mdi:cctv
    require_admin: true

command_line:
  - sensor:
      name: coinmarketcap_curl
      command: !secret coinmarketcap_curl
      value_template: "{{ value_json.value }}"
      scan_interval: 600 #10 mins refresh (this rate will use 144 credits per day out of the allocated 333 credits)
      json_attributes:
        - data
  - sensor:
      unique_id: phuket_rent_uptime
      name: Phuket Rent Uptime Sensor
      command: !secret phuket_rent
      scan_interval: 150

sensor:
  - platform: template
    sensors:
      proxmox_cpu_temp:
        unique_id: proxmox_cpu_temp
        friendly_name: "Proxmox CPU Temp"
        value_template: '{{ states("input_number.proxmox_input_cpu_temp") | multiply(0.001) | round(1) }}'
        unit_of_measurement: Â°C

  - platform: template
    sensors:
      all_plugs_power:
        unique_id: all_plugs_power
        friendly_name: All Plugs Power
        unit_of_measurement: Watt
        value_template: >
          {{ states('sensor.raspberry_outlet_power')| float(0) + states('sensor.garage_camera_light_power')| float(0) + states('sensor.bedroom_wardrobe_light_power')| float(0)}}

  - platform: history_stats
    name: Sleep TIme Duration
    entity_id: binary_sensor.bed_presense
    state: "on"
    type: time
    end: "{{ now().replace(hour=9, minute=0, second=0) }}"
    duration:
      hours: 15

  - platform: seventeentrack
    username: !secret 17login
    password: !secret 17pass

  - platform: etherscan
    name: "Cold Wallet"
    address: !secret eth_wallet

  - platform: time_date
    display_options:
      - "time"
      - "date"
      - "date_time"
      - "date_time_utc"
      - "date_time_iso"
      - "time_date"
      - "time_utc"

  - platform: worldclock
    time_zone: Europe/Moscow

  #=== Home Assistant Component counts

  - platform: template
    sensors:
      #----- Count Automations
      count_automations:
        value_template: "{{ states.automation | list | length }}"

      #----- Count Scripts
      count_scripts:
        value_template: "{{ states.script| list | length }}"

      #----- Count Device Trackers
      count_device_trackers:
        value_template: "{{ states.device_tracker | list | length }}"

      #----- Count Binary Sensors
      count_binary_sensors:
        value_template: "{{ states.binary_sensor| list | length }}"

      #----- Count Sensors
      count_sensors:
        value_template: "{{ states.sensor | list | length }}"

      #----- Count Switches
      count_switches:
        value_template: "{{ states.switch | list | length }}"

      #----- Count Zones
      count_zones:
        value_template: "{{ states.zone | list | length }}"

      #----- Input Booleans
      count_input_booleans:
        value_template: "{{ states.input_boolean | list | length }}"

      #----- Input Numbers
      count_input_numbers:
        value_template: "{{ states.input_number | list | length }}"

      #----- Input Texts
      count_input_texts:
        value_template: "{{ states.input_text | list | length }}"

      #----- Input Selects
      count_input_selects:
        value_template: "{{ states.input_select | list | length }}"

      #----- Input Date Times
      count_input_datetimes:
        value_template: "{{ states.input_datetime | list | length }}"

  # ====

  - platform: template
    sensors:
      sensor_count:
        friendly_name: "Number of Sensors"
        value_template: >-
          {{ states.sensor | rejectattr('state', 'eq', 'unavailable') | list | count }}
      automation_count:
        friendly_name: "Number of Automations"
        value_template: >-
          {{ states.automation| rejectattr('state', 'eq', 'unavailable') | list | count }}
      script_count:
        friendly_name: "Number of Scripts"
        value_template: >-
          {{ states.script | rejectattr('state', 'eq', 'unavailable') | list | count }}
      binary_sensor_count:
        friendly_name: "Number of Binary Sensors"
        value_template: >-
          {{ states.binary_sensor | rejectattr('state', 'eq', 'unavailable') | list | count }}
      tracker_count:
        friendly_name: "Number of Devices"
        value_template: >-
          {{ states.device_tracker| rejectattr('state', 'eq', 'unavailable') | list | count }}
      lights_count:
        friendly_name: "Number of Lights"
        value_template: >-
          {{ states.light | rejectattr('state', 'eq', 'unavailable') | list | count }}
      switches_count:
        friendly_name: "Number of Switches"
        value_template: >-
          {{ states.switch | rejectattr('state', 'eq', 'unavailable') | list | count }}
      camera_count:
        friendly_name: "Number of online Cameras"
        value_template: >-
          {{ states.camera | rejectattr('state', 'eq', 'unavailable') | list | count }}
      entities_count:
        friendly_name: "Number of Entities"
        value_template: >-
          {{ states | rejectattr('state', 'eq', 'unavailable') | list | count}}
      na_entities:
        friendly_name: "NA Entities"
        value_template: >-
          {{ states | selectattr('state', 'eq', 'unavailable') | map(attribute='entity_id') | list | truncate(250, False) }}
      na_entities_count:
        friendly_name: "Number of NA Entities"
        value_template: >-
          {{ states | selectattr('state', 'eq', 'unavailable') | map(attribute='entity_id') | list | count }}
      hvac_action:
        friendly_name: "HVAC Action"
        value_template: "{{states.climate.home.attributes.hvac_action}}"
      today_is:
        friendly_name: "Today is"
        value_template: "{{ ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'][now().weekday()] }}"
      month_is:
        friendly_name: "Month is"
        value_template: "{{ ['January','February','March','April','May','June','August','September','October','November','December'][now().month-1] }}"
      holiday:
        friendly_name: "Holiday"
        value_template: >-
          {% if states.calendar.holidays == 'on' %}
            {{ states.calendar.holidays.attributes.message }}
          {% elif states.calendar.anchorage_holidays.state == 'on' %}
            {{ states.calendar.anchorage_holidays.attributes.message }}
          {% else %}
            none
          {% endif %}

  - platform: template
    sensors:
      del_price:
        friendly_name: "DEL Price"
        unit_of_measurement: "USD"
        value_template: "{{ ((states.sensor.coinmarketcap_curl.attributes.data.DEL.quote.USD.price) | float) | round(2) }}"

  ##### === Devices Templates

  - platform: template
    sensors:
      xiaomi_alarm_hub:
        friendly_name: "Alarm Gateway"
        value_template: >-
          {%- if is_state("device_tracker.alarm_gateway", "home" ) %}
              Online
          {%- else -%}
              Offline
          {%- endif %}
        icon_template: >
          {% if is_state("device_tracker.alarm_gateway", "home") %}
            mdi:router
          {% else %}
            mdi:router
          {% endif %}

  - platform: template
    sensors:
      tuya_hub:
        friendly_name: "Tuya Gateway"
        value_template: >-
          {%- if is_state("device_tracker.tuya_gateway_1", "home" ) %}
              Online
          {%- else -%}
              Offline
          {%- endif %}
        icon_template: >
          {% if is_state("device_tracker.tuya_gateway_1", "home") %}
            mdi:router
          {% else %}
            mdi:router
          {% endif %}

  - platform: template
    sensors:
      bedroom_media_alexa:
        friendly_name: "Bedroom Alexa"
        value_template: >-
          {%- if is_state("device_tracker.bedroom_speaker", "home" ) %}
              Online
          {%- else -%}
              Offline
          {%- endif %}

  - platform: template
    sensors:
      hacs_server:
        friendly_name: "HACS Status"
        value_template: >-
          {%- if is_state("device_tracker.home_assistant", "home" ) %}
              Online
          {%- else -%}
              Offline
          {%- endif %}

  - platform: template
    sensors:
      zigbee_gateway:
        friendly_name: "ZigBee Gateway"
        value_template: >-
          {%- if is_state("device_tracker.zigbee_hub", "home" ) %}
              Online
          {%- else -%}
              Offline
          {%- endif %}
        icon_template: >
          {% if is_state("device_tracker.zigbee_hub", "home") %}
            mdi:router
          {% else %}
            mdi:router
          {% endif %}

  - platform: template
    sensors:
      kitchen_monitor:
        friendly_name: "Kitchen Monitor Status"
        value_template: >-
          {%- if is_state("device_tracker.kitchen_monitor", "home" ) %}
              Online
          {%- else -%}
              Offline
          {%- endif %}
        icon_template: >
          {% if is_state("device_tracker.kitchen_monitor", "home") %}
            mdi:monitor
          {% else %}
            mdi:monitor
          {% endif %}

  - platform: template
    sensors:
      rain_sensor:
        friendly_name: "Rain Sensor"
        value_template: >-
          {%- if is_state("binary_sensor.rain_sensor", "off" ) %}
              No Rain
          {%- else -%}
              Rain Outside
          {%- endif %}
        icon_template: >
          {% if is_state("binary_sensor.rain_sensor", "off") %}
            mdi:weather-sunny
          {% else %}
            mdi:weather-pouring
          {% endif %}

  - platform: template
    sensors:
      matrix_clock:
        friendly_name: "Ulanzi Clock"
        value_template: >-
          {%- if is_state("device_tracker.ulanzi_clock", "home" ) %}
              Online
          {%- else -%}
              Offline
          {%- endif %}
        icon_template: >
          {% if is_state("device_tracker.ulanzi_clock", "home") %}
            mdi:clock
          {% else %}
            mdi:clock
          {% endif %}

  - platform: template
    sensors:
      micebook_sensor:
        friendly_name: "Micebook Laptop"
        value_template: >-
          {%- if is_state("binary_sensor.micebook_status", "on" ) %}
              Online
          {%- else -%}
              Offline
          {%- endif %}
        icon_template: >
          {% if is_state("binary_sensor.micebook_status", "on") %}
            mdi:laptop
          {% else %}
            mdi:laptop
          {% endif %}

  - platform: template
    sensors:
      sofa_presense:
        friendly_name: "Livingroom Sofa Presense"
        unique_id: "0a7476cc-d6c1-40ba-8ae1-606518c3497f"
        value_template: >-
          {%- if is_state("binary_sensor.sofa_presense", "off" ) %}
              Online
          {%- else -%}
              Offline
          {%- endif %}
        icon_template: >
          {% if is_state("binary_sensor.sofa_presense", "off") %}
            hue:room-living
          {% else %}
            hue:room-living-off
          {% endif %}
